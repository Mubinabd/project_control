version: '3.9'

services:
  migrate:
    image: migrate/migrate
    networks:
      - ntwrk
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgres://postgres:1234@postgres:5432/auth?sslmode=disable", "up"]
    depends_on:
      - postgres

  postgres:
    container_name: postgresdb
    image: postgres:latest
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
      POSTGRES_DB: auth 
    volumes:
      - db:/data/postgres
    ports:
      - "5437:5432"
    networks:
      - ntwrk
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5 

  redis:
    image: "redis:latest"
    container_name: redis_auth
    ports:
      - "6377:6379"
    networks:
      - ntwrk

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper_auth
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2218:2181
    networks:
      - ntwrk

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka_auth
    depends_on:
      - zookeeper
    ports:
      - 29097:29092
    networks:
      - ntwrk
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper_auth:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  auth-service:
    container_name: auth
    build: .
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    networks:
      - ntwrk
    environment:
      - DB_HOST=postgresdb
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=1234
      - DB_NAME=auth
      - KAFKA_BROKER=kafka_auth:9092

volumes:
  db:

networks:
  ntwrk:
    external: true
    name: ntwrk
    driver: bridge